<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Summer&#39;s Blog</title>
  
  <subtitle>找到你，就像在夏天的午后，你找到了你的那一抹阳光</subtitle>
  <link href="https://xyz-summer.github.io/atom.xml" rel="self"/>
  
  <link href="https://xyz-summer.github.io/"/>
  <updated>2024-08-03T03:49:44.703Z</updated>
  <id>https://xyz-summer.github.io/</id>
  
  <author>
    <name>XYZ</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>算法</title>
    <link href="https://xyz-summer.github.io/posts/b7e144d1.html"/>
    <id>https://xyz-summer.github.io/posts/b7e144d1.html</id>
    <published>2024-08-03T03:16:57.000Z</published>
    <updated>2024-08-03T03:49:44.703Z</updated>
    
    <content type="html"><![CDATA[<h2 id="算法1-快速排序和归并排序">算法1 快速排序和归并排序</h2><h3 id="快速排序">快速排序</h3><ul><li>思路：<br>1.选择一个基准值<br>2.将数组分为两个子数组，左边的子数组元素都小于基准值，右边的子数组元素都大于基准值<br>3.<strong>递归</strong>地对这两个子数组进行排序</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">quickSort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> key = q[(l + r + <span class="number">1</span>) / <span class="number">2</span>], i = l - <span class="number">1</span>, j = r + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j) &#123;</span><br><span class="line">        <span class="keyword">do</span> i++; <span class="keyword">while</span> (q[i] &lt;= key);</span><br><span class="line">        <span class="keyword">do</span> j--; <span class="keyword">while</span> (q[j] &gt;= key);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">quickSort</span>(q, l, i<span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">quickSort</span>(q, i, r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="归并排序">归并排序</h3><ul><li>思路：<br>1.将数组分成两半，分别对它们进行排序<br>2.将排序好的两半合并成一个有序数组</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">mergeSort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> ( l&gt;= r ) <span class="keyword">return</span>;</span><br><span class="line">    <span class="type">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">    <span class="built_in">mergeSort</span>(q, l, mid), <span class="built_in">mergeSort</span>(q, mid+<span class="number">1</span>, r);</span><br><span class="line">    <span class="type">int</span> tmp[r - l + <span class="number">1</span>], k = <span class="number">0</span>, i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r) &#123;</span><br><span class="line">        <span class="keyword">if</span> (q[i] &lt;= q[j]) tmp[k++] = q[i++];</span><br><span class="line">        <span class="keyword">else</span> tmp[k++] = q[j++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) tmp[k++] = q[i++];</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= r) tmp[k++] = q[j++];</span><br><span class="line">    <span class="keyword">for</span>(i = l, j = <span class="number">0</span>; j &lt; k; j++, i++) q[i] = tmp[j];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;算法1-快速排序和归并排序&quot;&gt;算法1 快速排序和归并排序&lt;/h2&gt;
&lt;h3 id=&quot;快速排序&quot;&gt;快速排序&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;思路：&lt;br&gt;
1.选择一个基准值&lt;br&gt;
2.将数组分为两个子数组，左边的子数组元素都小于基准值，右边的子数组元素都大于基准值&lt;</summary>
      
    
    
    
    <category term="算法" scheme="https://xyz-summer.github.io/categories/%E7%AE%97%E6%B3%95/"/>
    
    
    <category term="算法" scheme="https://xyz-summer.github.io/tags/%E7%AE%97%E6%B3%95/"/>
    
  </entry>
  
</feed>
